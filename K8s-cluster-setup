Lab Setup
Master Node:  172.31.35.217 – master.example.net
First Worker Node:  172.31.37.183 – worker-1.example.net
Second Worker Node:  172.31.44.138 – worker-2.example.net

Step 1) Set hostname and add entries in the hosts file

$ sudo hostnamectl set-hostname "master.example.net"
$ exec bash

On the worker nodes, run

$ sudo hostnamectl set-hostname "worker-1.example.net"   // 1st worker node
$ sudo hostnamectl set-hostname "worker-2.example.net"   // 2nd worker node
$ exec bash

Add the following entries in /etc/hosts file on each node

172.31.35.217  master.example.net
172.31.37.183  worker-1.example.net
172.31.44.138  worker-2.example.net

Step 2) Disable swap & add kernel settings

$ sudo swapoff -a
$ sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

Load the following kernel modules on all the nodes,

$ sudo tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF
$ sudo modprobe overlay
$ sudo modprobe br_netfilter

Step 3) Install containerd run time( Make sure to run the following commands on all nodes )

$ sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates

Enable docker repository

$ sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

$ sudo apt update
$ sudo apt install -y containerd.io

Configure containerd so that it starts using systemd as cgroup.

containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

Restart and enable containerd service

sudo systemctl restart containerd
sudo systemctl enable containerd

Step 4) Add apt repository for Kubernetes

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

Step 5) Install Kubernetes components Kubectl, kubeadm & kubelet

sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

Step 6) Initialize Kubernetes cluster with Kubeadm command

sudo kubeadm init --control-plane-endpoint=controller

Step 7) Install Calico Pod Network Add-on

curl https://projectcalico.docs.tigera.io/manifests/calico.yaml -O
kubectl apply -f calico.yaml


